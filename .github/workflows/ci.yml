name: CI
on: push

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Get tag name
        id: tagName
        uses: olegtarasov/get-tag@v2.1

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Restore cached Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}

      - name: Run checks and tests
        run: ./gradlew check test

      - name: Build
        if: ${{ steps.tagName.outputs.tag != 0 }}
        run: ./gradlew build

      # Generate changelog if tagged.
      - name: Generate changelog
        if: ${{ steps.tagName.outputs.tag != 0 }}
        run: ./gradlew generateChangelog

      # Deploy to GitHub Releases if tagged.
      - name: Deploy (GitHub)
        if: ${{ steps.tagName.outputs.tag != 0 }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: build/tmp/changelog.md
          draft: false
          prerelease: false

      # Deploy to CursedForge if tagged.
      - name: Deploy (Curse)
        if: ${{ steps.tagName.outputs.tag != 0 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CURSEFORGE_API_TOKEN: ${{ secrets.CURSEFORGE_API_TOKEN }}
          CURSEFORGE_PROJECT_ID: ${{ secrets.CURSEFORGE_PROJECT_ID }}
        run: ./gradlew deployCurseForge # to-do: should probably be an isolated action

      - name: Cleanup Gradle cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
